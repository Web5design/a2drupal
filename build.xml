<?xml version="1.0"?>
<project name="appendToDrupalBuild" default="help" basedir=".">

<!-- PREPARATION -->
<tstamp/>
<taskdef classname="DrupalDrushTask" name="drush" classpath="${application.startdir}/buildlib/lib/" />

<!-- by default use the build.properties file -->
<property file="buildlib/system.properties" />
<property file="config.properties" />

<!-- TARGET DEFINITIONS -->

<!-- TARGET: help -->
<target name="help">
<echo>
-----------------------------------------------------------
  +++++ Welcome to appendTo Drupal Platform Builder +++++   
-----------------------------------------------------------
This build system will assist with defining, constructing and
developing a Drupal Platform capable of being deployed through
the appendTo Drupal Site Builder System.  

Several types of builds can be constructed.  See the README 
included in this folder for additional information.  

Below are the available commands for this sytem.

http://appendto.com
</echo><exec command="phing -l" dir="." passthru="true" />
</target>

<!-- TARGET: verifyEnvironment -->
<target name="local.verify">
	<!-- Verify Properties -->
	<if><not><isset property="db.super.user" /></not><then>
		<fail>!!!!!! Database Super User not specified</fail>
	</then></if>
	<if><not><isset property="db.host" /></not><then>
		<fail>!!!!!! Database Hostname not specified</fail>
	</then></if>
	<if><not><isset property="db.name" /></not><then>
		<fail>!!!!!! Database Name not specified</fail>
	</then></if>
	<if><not><isset property="db.user" /></not><then>
		<fail>!!!!!! Database Username not specified</fail>
	</then></if>
	<if><not><isset property="db.pass" /></not><then>
		<fail>!!!!!! Database Password not specified</fail>
	</then></if>
	<!-- TODO -->
	<!-- Verify existence of Drush -->
	<!-- Verify existence of Drush Make -->
</target>

<!-- TARGET: local.db.create -->
<target name="local.db.create" depends="local.verify" description="-> Creates local database environment">
	<echo>-------------------------------------------------</echo>
	<echo>    +++++ Creating Database Environment +++++    </echo>
	<echo>-------------------------------------------------</echo>
	<copy file="${application.startdir}/buildlib/sql/${db.env.create}" tofile="${application.startdir}/${db.dir}/my_${db.env.create}" overwrite="true" />
	<reflexive file="${application.startdir}/${db.dir}/my_${db.env.create}">
		<filterchain>
			<replacetokens begintoken="##" endtoken="##">
				<token key="DBUSER" value="${db.user}" />
				<token key="DBPASS" value="${db.pass}" />
				<token key="DBNAME" value="${db.name}" />
				<token key="DBHOST" value="${db.host}" />
			</replacetokens>
		</filterchain>
	</reflexive>
	<exec command="mysql --host=${db.host} -u ${db.super.user} -p &lt; ${application.startdir}/${db.dir}/my_${db.env.create}" dir="." passthru="true" />
	<delete file="${application.startdir}/${db.dir}/my_${db.env.create}" />
</target>

<!-- TARGET: local.db.drop -->
<target name="local.db.drop" depends="local.verify" description="-> Drops local database environment">
	<copy file="${application.startdir}/buildlib/sql/${db.env.drop}" tofile="${application.startdir}/${db.dir}/my_${db.env.drop}" overwrite="true" />
	<reflexive file="${application.startdir}/${db.dir}/my_${db.env.drop}">
		<filterchain>
			<replacetokens begintoken="##" endtoken="##">
				<token key="DBUSER" value="${db.user}" />
				<token key="DBNAME" value="${db.name}" />
				<token key="DBHOST" value="${db.host}" />
			</replacetokens>
		</filterchain>
	</reflexive>
	<exec command="mysql --host=${db.host} -u ${db.super.user} -p &lt; ${application.startdir}/${db.dir}/my_${db.env.drop}" dir="." passthru="true" />
	<delete file="${application.startdir}/${db.dir}/my_${db.env.drop}" />
</target>

<!-- TARGET: local.db.reload -->
<target name="local.db.reload" depends="local.verify" description="-> Drops, then re-creates local database environment">
	<echo>-------------------------------------------------</echo>
	<echo>   +++++ Reloading Database Environment +++++    </echo>
	<echo>-------------------------------------------------</echo>
	<phingcall target="local.db.save" />
	<phingcall target="local.db.drop" />
	<phingcall target="local.db.create" />
	<phingcall target="local.db.load" />
</target>

<!-- TARGET: local.db.save -->
<target name="local.db.save" depends="local.verify" description="-> Saves a database snapshot">
	<exec command="mysqldump --host=${db.host} --user=${db.user} --password=${db.pass} --opt ${db.name} > ${application.startdir}/${db.dir}/${db.snapshot}" dir="." passthru="true" />
</target>

<!-- TARGET: local.db.load -->
<target name="local.db.load" depends="local.verify" description="-> Loads a database snapshot">
	<exec command="mysql --host=${db.host} -u ${db.user} --password=${db.pass} ${db.name} &lt; ${application.startdir}/${db.dir}/${db.snapshot}" dir="." passthru="true" />
</target>

<!-- TARGET: local.clean -->
<target name="local.clean" depends="local.verify" description="-> Cleans the local environment">
	<echo>-------------------------------------------------</echo>
	<echo>         +++++ Cleaning Installation +++++       </echo>
	<echo>-------------------------------------------------</echo>
	<exec command="rm -r ${drupal.dir}/*" dir="." passthru="TRUE"/>
	<exec command="rm -r ${drupal.dir}/.*" dir="." passthru="TRUE"/>
	<exec command="rm -r ${application.startdir}/build/" dir="." passthru="TRUE"/>

	<!-- Destroy database -->
	<phingcall target="local.db.drop" />
</target>

<!-- target: build.standalone -->
<target name="build.standalone" depends="local.verify" description="-> Builds and configures a local, standlone Drupal site">
	<!-- TODO -->
	
</target>

<!-- TARGET: build.installprofile -->
<target name="build.installprofile" depends="local.verify" description="-> Builds local system as a Drupal Installation Profile">
	<!-- TODO -->
</target>
</project>
